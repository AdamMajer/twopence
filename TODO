BUGS
   o Mention --debug option in shell/*.1 manpages

   o server: in open_file_as, be careful with user accounts
     that have no home directory set, or have "/" as home.

REFACTORING
   o not sure there is much point in having two concurrent APIs to do the same:
     refactor shell and ruby wrappers to use directly twopence_run_test()?
     [DONE for shell/command.c]

   o remove target.current {} stuff which is no longer needed (I hope)

FUNCTIONALITY
   o write help pages
     Ruby
     Python
     write manpages: twopence(3), twopence(3py)

   o minimalistic options for the twopence_exit command
     -h --help -v --version

   o accept a directory as destination filename for inject and extract
   o be able to inject or extract a full directory tree
     -r --recursive

   o currently, only shell/command supports the --keepalive option
     Not sure whether it makes sense to also support this in the
     other shell commands, as the only reason to add it to command(1)
     was the ability to test keepalives...

   o when injecting files, be able to set up the permission mask
     -m --mask

   o be able to pass environment variables to remote command
     -e --envvar

   o integration with Pennyworth

   o real docbook documentation, reusing the README as a starting point

   o handle interrupts during file transfers,
     not only during command execution
     Note from okir: this should be next to trivial for the virtio target,
     but may require a bit more work for ssh.

   o Document the tests we're doing in tests/

   o protocol: use the HELLO command to ensure that both ends of the
     communication use the same protocol version

     Use HELLO to request certain protocol features, such as keepalives?

FUTURE DIRECTIONS
   o Twopence could be extended by writing new plugins,
     for example for running tests in Linux containers or chroot jails

   o it could also be extended by writing new programming language wrappers
     (Perl, Java...)

